
############################################# Previous code to convert SMILES into numbers



# from rdkit import Chem
# from rdkit.Chem import Descriptors

# smiles = "CCO"  # example: ethanol
# mol = Chem.MolFromSmiles(smiles)

# mw = Descriptors.MolWt(mol)
# logp = Descriptors.MolLogP(mol)
# tpsa = Descriptors.TPSA(mol)
# h_donors = Descriptors.NumHDonors(mol)
# h_acceptors = Descriptors.NumHAcceptors(mol)

# print(mw, logp, tpsa, h_donors, h_acceptors)












########################################## NEw code to convert SMILES in numbers


# generate_numeric_features.py
import pandas as pd
from rdkit import Chem
from rdkit.Chem import Descriptors
from sklearn.preprocessing import OneHotEncoder
import numpy as np
import os

# Paths
input_csv = "data_processed/AqSolDB_clean.csv"   # change for BigSolDB_clean.csv
output_csv = "features/AqSolDB_features_numeric.csv"

# Load dataset
df = pd.read_csv(input_csv)

# ------------------------------
# Step 1: Compute numeric descriptors for solutes
# ------------------------------
def compute_descriptors(smiles):
    mol = Chem.MolFromSmiles(smiles)
    if mol is None:
        # handle invalid SMILES
        return [np.nan]*3
    mw = Descriptors.MolWt(mol)
    logp = Descriptors.MolLogP(mol)
    tpsa = Descriptors.TPSA(mol)
    return [mw, logp, tpsa]

descriptor_values = df["Solute"].apply(compute_descriptors)
df[["MW", "LogP", "TPSA"]] = pd.DataFrame(descriptor_values.tolist(), index=df.index)

# ------------------------------
# Step 2: Encode solvents as numeric (one-hot)
# ------------------------------
solvent_encoder = OneHotEncoder(sparse_output=False, handle_unknown='ignore')

solvent_encoded = solvent_encoder.fit_transform(df[["Solvent"]])
solvent_columns = [f"Solvent_{s}" for s in solvent_encoder.categories_[0]]
df[solvent_columns] = pd.DataFrame(solvent_encoded, index=df.index)

# ------------------------------
# Step 3: Drop original string columns
# ------------------------------
df_numeric = df.drop(columns=["Solute", "Solvent", "Units"])


# Ensure Solubility is still included
if "Solubility" not in df_numeric.columns and "Solubility" in df.columns:
    df_numeric["Solubility"] = df["Solubility"]


# ------------------------------
# Step 4: Handle NaNs if any
# ------------------------------
df_numeric = df_numeric.dropna()  # or fillna with mean/median if preferred

# ------------------------------
# Step 5: Save numeric features CSV
# ------------------------------
os.makedirs("features", exist_ok=True)
df_numeric.to_csv(output_csv, index=False)

print("âœ… Numeric features saved:", output_csv)
print("Columns:", df_numeric.columns)
print("Shape:", df_numeric.shape)










################################## To check is did SMILES converted or not

# import pandas as pd

# # Load the features CSV generated by your script
# df = pd.read_csv("features/AqSolDB_features_numeric.csv")

# # Show first 5 rows
# print(df.head())







